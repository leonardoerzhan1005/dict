# Generated by Django 4.0.8 on 2025-08-04 17:40

from django.db import migrations, models
from django.utils.text import slugify


def populate_slugs(apps, schema_editor):
    """Заполняем slug'ы для существующих записей"""
    Category = apps.get_model('dictionary', 'Category')
    Tag = apps.get_model('dictionary', 'Tag')
    Word = apps.get_model('dictionary', 'Word')
    
    # Заполняем slug'ы для категорий
    for category in Category.objects.all():
        if not category.slug:
            base_slug = slugify(category.code)
            # Проверяем уникальность
            counter = 1
            slug = base_slug
            while Category.objects.filter(slug=slug).exclude(id=category.id).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            category.slug = slug
            category.save()
    
    # Заполняем slug'ы для тегов
    for tag in Tag.objects.all():
        if not tag.slug:
            base_slug = slugify(tag.code)
            # Проверяем уникальность
            counter = 1
            slug = base_slug
            while Tag.objects.filter(slug=slug).exclude(id=tag.id).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            tag.slug = slug
            tag.save()
    
    # Заполняем slug'ы для слов
    for word in Word.objects.all():
        if not word.slug:
            base_slug = slugify(word.word)
            lang_suffix = f"-{word.language.code}"
            slug = base_slug + lang_suffix
            # Проверяем уникальность
            counter = 1
            while Word.objects.filter(slug=slug).exclude(id=word.id).exists():
                slug = f"{base_slug}-{counter}{lang_suffix}"
                counter += 1
            word.slug = slug
            word.save()


def reverse_populate_slugs(apps, schema_editor):
    """Обратная операция - очищаем slug'ы"""
    Category = apps.get_model('dictionary', 'Category')
    Tag = apps.get_model('dictionary', 'Tag')
    Word = apps.get_model('dictionary', 'Word')
    
    Category.objects.all().update(slug='')
    Tag.objects.all().update(slug='')
    Word.objects.all().update(slug='')


class Migration(migrations.Migration):

    dependencies = [
        ('dictionary', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='category',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly идентификатор', max_length=100, unique=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly идентификатор', unique=True),
        ),
        migrations.AddField(
            model_name='word',
            name='slug',
            field=models.SlugField(blank=True, help_text='URL-friendly идентификатор', max_length=150, unique=True),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['slug'], name='dictionary__slug_ce6e7b_idx'),
        ),
        migrations.RunPython(populate_slugs, reverse_populate_slugs),
    ]
